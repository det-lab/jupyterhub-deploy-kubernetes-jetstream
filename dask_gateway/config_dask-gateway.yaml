gateway:
  # Number of instances of the gateway-server to run
  replicas: 1

  # Path prefix to serve dask-gateway api requests under
  # This prefix will be added to all routes the gateway manages
  # in the traefik proxy.
  prefix: "/services/dask-gateway"

  # The image to use for the gateway-server pod.
  image:
    name: daskgateway/dask-gateway-server
    tag: 0.8.0
    pullPolicy: IfNotPresent

  auth:
    # The auth type to use. One of {simple, kerberos, jupyterhub, custom}.
    type: jupyterhub

    jupyterhub:
      # A JupyterHub api token for dask-gateway to use. See
      # https://gateway.dask.org/install-kube.html#authenticating-with-jupyterhub.
      # apiToken: "TOKEN"

  backend:
    # The image to use for both schedulers and workers.
    image:
      name: "zonca/docker-jupyter-cdms-light"
      tag: "2020.07.07"
      pullPolicy: IfNotPresent

    # The namespace to launch dask clusters in. If not specified, defaults to
    # the same namespace the gateway is running in.
    namespace: null

    # A mapping of environment variables to set for both schedulers and workers.
    environment:
        PYTHONPATH: /cvmfs/cdms.opensciencegrid.org/releases/centos7/V03-06//lib/python3.6/site-packages:/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.18.00-885ca/x86_64-centos7-gcc8-opt/lib:/cvmfs/sft.cern.ch/lcg/views/LCG_96python3/x86_64-centos7-gcc8-opt/lib:/cvmfs/sft.cern.ch/lcg/views/LCG_96python3/x86_64-centos7-gcc8-opt/lib/python3.6/site-packages
        'LD_LIBRARY_PATH': /cvmfs/cdms.opensciencegrid.org/releases/centos7/V03-06/IOLibrary/lib:/cvmfs/cdms.opensciencegrid.org/releases/centos7/V03-06/lib:/cvmfs/cdms.opensciencegrid.org/releases/centos7/V03-06/lib/Linux-g++:/cvmfs/sft.cern.ch/lcg/releases/qt5/5.12.1-a1c24/x86_64-centos7-gcc8-opt/lib:/cvmfs/sft.cern.ch/lcg/releases/clhep/2.4.1.0-2c56f/x86_64-centos7-gcc8-opt/lib:/cvmfs/sft.cern.ch/lcg/releases/Geant4/10.05.p01-9e420/x86_64-centos7-gcc8-opt/lib64:/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.18.00-885ca/x86_64-centos7-gcc8-opt/lib:/cvmfs/sft.cern.ch/lcg/views/LCG_96python3/x86_64-centos7-gcc8-opt/lib/python3.6/site-packages/tensorflow:/cvmfs/sft.cern.ch/lcg/views/LCG_96python3/x86_64-centos7-gcc8-opt/lib/python3.6/site-packages/tensorflow/contrib/tensor_forest:/cvmfs/sft.cern.ch/lcg/views/LCG_96python3/x86_64-centos7-gcc8-opt/lib/python3.6/site-packages/tensorflow/python/framework:/cvmfs/sft.cern.ch/lcg/releases/java/8u91-ae32f/x86_64-centos7-gcc8-opt/jre/lib/amd64:/cvmfs/sft.cern.ch/lcg/views/LCG_96python3/x86_64-centos7-gcc8-opt/lib64:/cvmfs/sft.cern.ch/lcg/views/LCG_96python3/x86_64-centos7-gcc8-opt/lib:/cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/lib:/cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/lib64:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.30-e5b21/x86_64-centos7/lib:/cvmfs/cdms.opensciencegrid.org/releases/centos7/V03-06/lib:/cvmfs/sft.cern.ch/lcg/releases/R/3.5.3-883db/x86_64-centos7-gcc8-opt/lib64/R/library/readr/rcon:/lib64
        PATH: /cvmfs/cdms.opensciencegrid.org/releases/centos7/V03-06/radsrc/bin:/cvmfs/cdms.opensciencegrid.org/releases/centos7/V03-06/bin/Linux-g++:/cvmfs/sft.cern.ch/lcg/releases/Geant4/10.05.p01-9e420/x86_64-centos7-gcc8-opt/bin:/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.18.00-885ca/x86_64-centos7-gcc8-opt/bin:/cvmfs/sft.cern.ch/lcg/views/LCG_96python3/x86_64-centos7-gcc8-opt/bin:/cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.30-e5b21/x86_64-centos7/bin:/cvmfs/cdms.opensciencegrid.org/releases/centos7/V03-06/bin:/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    scheduler:
      # Any extra configuration for the scheduler pod. Sets
      # `c.KubeClusterConfig.scheduler_extra_pod_config`.
      extraPodConfig:
        volumes:
            - name: cvmfs-nfs-volume
              nfs:
                # for Magnum
                # server: 10.254.77.77
                # for Kubespray
                server: 10.233.46.63
                path: /

      # Any extra configuration for the scheduler container.
      # Sets `c.KubeClusterConfig.scheduler_extra_container_config`.
      extraContainerConfig:
        volumeMounts:
            - name: cvmfs-nfs-volume
              mountPath: /cvmfs
              readOnly: false

      # Cores request/limit for the scheduler.
      cores:
        request: null
        limit: null

      # Memory request/limit for the scheduler.
      memory:
        request: null
        limit: null

    worker:
      # Any extra configuration for the worker pod. Sets
      # `c.KubeClusterConfig.worker_extra_pod_config`.
      extraPodConfig:
        volumes:
            - name: cvmfs-nfs-volume
              nfs:
                # for Magnum
                # server: 10.254.77.77
                # for Kubespray
                server: 10.233.46.63
                path: /

      # Any extra configuration for the worker container. Sets
      # `c.KubeClusterConfig.worker_extra_container_config`.
      extraContainerConfig:
        volumeMounts:
            - name: cvmfs-nfs-volume
              mountPath: /cvmfs
              readOnly: false

      # Cores request/limit for each worker.
      cores:
        request: null
        limit: null

      # Memory request/limit for each worker.
      memory:
        request: null
        limit: null

  # Any extra configuration code to append to the generated `dask_gateway_config.py`
  # file. Can be either a single code-block, or a map of key -> code-block
  # (code-blocks are run in alphabetical order by key, the key value itself is
  # meaningless). The map version is useful as it supports merging multiple
  # `values.yaml` files, but is unnecessary in other cases.
  extraConfig:
      # Use the mapping form, to support merging multiple values.yaml
      optionHandler: |
        from dask_gateway_server.options import Options, Integer, Float, String
        def option_handler(options):
            if ":" not in options.image:
                raise ValueError("When specifying an image you must also provide a tag")
            return {
                "worker_cores_limit": options.worker_cores,
                "worker_cores": min(options.worker_cores / 2, 1),
                "worker_memory": "%fG" % options.worker_memory,
                "image": options.image,
            }
        c.Backend.cluster_options = Options(
            Integer("worker_cores", 2, min=1, max=4, label="Worker Cores"),
            Float("worker_memory", 4, min=1, max=10, label="Worker Memory (GiB)"),
            String("image", default="zonca/docker-jupyter-cdms-light:2020.07.07", label="Image"),
            handler=option_handler,
        )

# Configuration for the gateway controller
controller:
  # Whether the controller should be deployed. Disabling the controller allows
  # running it locally for development/debugging purposes.
  enabled: true

  # Max time (in seconds) to keep around records of completed clusters.
  # Default is 24 hours.
  completedClusterMaxAge: 86400

  # Time (in seconds) between cleanup tasks removing records of completed
  # clusters. Default is 5 minutes.
  completedClusterCleanupPeriod: 600

  # The image to use for the controller pod.
  image:
    name: daskgateway/dask-gateway-server
    tag: 0.8.0
    pullPolicy: IfNotPresent

# Configuration for the traefik proxy
traefik:
  # Number of instances of the proxy to run
  replicas: 1

  # The image to use for the proxy pod
  image:
    name: traefik
    tag: 2.1.3

  # Whether to expose the dashboard on port 9000 (enable for debugging only!)
  dashboard: false

  # Additional configuration for the traefik service
  service:
    type: ClusterIP

rbac:
  # Whether to enable RBAC.
  enabled: true
